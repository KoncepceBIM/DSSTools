<Window x:Class="LOIN.Viewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LOIN.Viewer"
        mc:Ignorable="d"
        Name="self"
        Title="LOIN Viewer" Height="700" Width="1000" Icon="/ifc.ico">
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:Commands.OpenFile}" Executed="OpenFile_Click"/>
        <CommandBinding Command="{x:Static local:Commands.ExportFile}" Executed="SelectionToIFC_Click"/>
        <CommandBinding Command="{x:Static local:Commands.Model}" Executed="Validate_Click"/>
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="_File">
                <MenuItem Header="Open (Ctrl+O)" Click="OpenFile_Click">
                    <MenuItem.Icon>
                        <Image Source="ifc.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Export to MVD XML for IFC4" Click="ExportToMVD4_Click">
                    <MenuItem.Icon>
                        <Image Source="xml.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Export to MVD XML for IFC2x3" Click="ExportToMVD2x3_Click">
                    <MenuItem.Icon>
                        <Image Source="xml.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Selection to MVD XML for IFC4" Click="SelectionToMVD4_Click">
                    <MenuItem.Icon>
                        <Image Source="xml.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Selection to MVD XML for IFC2x3" Click="SelectionToMVD2x3_Click">
                    <MenuItem.Icon>
                        <Image Source="xml.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Export selection to partial _IFC  (Ctrl+E)" Click="SelectionToIFC_Click">
                    <MenuItem.Icon>
                        <Image Source="ifc.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Validate model file against selection  (Ctrl+M)" Click="Validate_Click">
                    <MenuItem.Icon>
                        <Image Source="bcf.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <!--Context-->
                <ColumnDefinition/>
                <!--Splitter-->
                <ColumnDefinition Width="Auto"/>
                <!--Requirements-->
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0">Breakedown Structure</TextBlock>
                <TreeView Grid.Row="1" Name="twBreakDownStructure" ItemsSource="{Binding ElementName=self, Path=BreakedownItems}">
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <StackPanel Orientation="Horizontal">
                                <CheckBox IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"></CheckBox>
                                <Label Content="{Binding ShowName}"></Label>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
                <TextBlock Grid.Row="2">Reasons (<Run Text="{Binding ElementName=self, Path=Reasons.Count, Mode=OneWay}"></Run>)</TextBlock>
                <DataGrid Grid.Row="3" Name="dgReasons"  ItemsSource="{Binding ElementName=self, Path=Reasons}"
                          AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False">
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Header="Select"/>
                        <DataGridTextColumn Binding="{Binding Name}" Header="Name" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Description}" Header="Description" Width="*" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <TextBlock Grid.Row="4">Actors (<Run Text="{Binding ElementName=self, Path=Actors.Count, Mode=OneWay}"></Run>)</TextBlock>
                <DataGrid Grid.Row="5" Name="dgActors" ItemsSource="{Binding ElementName=self, Path=Actors}"
                           AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False">
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Header="Select"/>
                        <DataGridTextColumn Binding="{Binding Name}" Header="Name" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Description}" Header="Description" Width="*" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <TextBlock Grid.Row="6">Milestones (<Run Text="{Binding ElementName=self, Path=Milestones.Count, Mode=OneWay}"></Run>)</TextBlock>
                <DataGrid Grid.Row="7" Name="dgMilestones" ItemsSource="{Binding ElementName=self, Path=Milestones}"
                           AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False">
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Header="Select"/>
                        <DataGridTextColumn Binding="{Binding Name}" Header="Name" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Description}" Header="Description"  Width="*" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <GridSplitter Grid.Column="1"
              HorizontalAlignment="Center"
              VerticalAlignment="Stretch"
              ShowsPreview="True"
              Width="5"
              />
            <TabControl Grid.Column="2">
                <TabItem>
                    <TabItem.Header>
                        <TextBlock Grid.Row="0">Requirements (<Run Text="{Binding ElementName=self, Path=ContextSelector.Requirements.Count, Mode=OneWay}"></Run>)</TextBlock>
                    </TabItem.Header>
                    <DataGrid ItemsSource="{Binding ElementName=self, Path=ContextSelector.Requirements}"
                           AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" SelectionMode="Single">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Set name" IsReadOnly="True" Binding="{Binding Parent.Name}"/>
                            <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Header="Select"/>
                            <DataGridTextColumn Binding="{Binding Name}" Header="Name" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Description}" Header="Description"  Width="*" IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style>
                                        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding ValueType}" Header="Value Type" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Unit" IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <TextBlock Grid.Row="0">Requirement sets (<Run Text="{Binding ElementName=self, Path=ContextSelector.RequirementSets.Count, Mode=OneWay}"></Run>)</TextBlock>
                    </TabItem.Header>
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="4*"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="6*"/>
                        </Grid.RowDefinitions>
                        <DockPanel>
                            <DockPanel  DockPanel.Dock="Right">
                                <Label>Include upper categories</Label>
                                <CheckBox IsChecked="{Binding ElementName=self, Path=ContextSelector.IncludeUpperBreakdown}" VerticalAlignment="Center" 
                                  Padding="0 0 5 0"/>
                            </DockPanel>
                        </DockPanel>
                        <DataGrid Grid.Row="1" Name="dgPSets" ItemsSource="{Binding ElementName=self, Path=ContextSelector.RequirementSets}"
                           AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" SelectionMode="Single">
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Header="Select"/>
                                <DataGridTextColumn Binding="{Binding Name}" Header="Name" IsReadOnly="True"/>
                                <DataGridTextColumn Binding="{Binding Description}" Header="Description"  Width="*" IsReadOnly="True">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <TextBlock Grid.Row="2">Requirements (<Run Text="{Binding ElementName=dgPSets, Path=SelectedItem.Requirements.Count, Mode=OneWay}"></Run>)</TextBlock>
                        <DataGrid Grid.Row="3" Name="dgProps" ItemsSource="{Binding ElementName=dgPSets, Path=SelectedItem.Requirements}"
                    AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" SelectionMode="Single">
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Header="Select"/>
                                <DataGridTextColumn Binding="{Binding Name}" Header="Name" IsReadOnly="True"/>
                                <DataGridTextColumn Binding="{Binding Description}" Header="Description"  Width="*" IsReadOnly="True">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding ValueType}" Header="Value Type" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Unit" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
            </TabControl>

        </Grid>
    </Grid>
</Window>
