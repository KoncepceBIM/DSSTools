using System.Collections.Generic;
using Xbim.Ifc4.Interfaces;
using Xbim.Ifc4.MeasureResource;

namespace LOIN.Validation
{
    public class MeasureUnitMaps
    {
        public static readonly Dictionary<string, UnitKind> UnitKinds;
        public static readonly Dictionary<string, IfcUnitEnum> Units;
        public static readonly Dictionary<string, IfcDerivedUnitEnum> DerivedUnits;

        static MeasureUnitMaps()
        {
            UnitKinds = new Dictionary<string, UnitKind> {
                { nameof(IfcAbsorbedDoseMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcAccelerationMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcPHMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcRadioActivityMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcAmountOfSubstanceMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcAngularVelocityMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcAreaMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcAreaDensityMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcCompoundPlaneAngleMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcElectricCapacitanceMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcThermodynamicTemperatureMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcCurvatureMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcDoseEquivalentMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcDynamicViscosityMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcElectricChargeMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcElectricConductanceMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcElectricCurrentMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcElectricVoltageMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcElectricResistanceMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcEnergyMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcForceMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcFrequencyMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcHeatFluxDensityMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcHeatingValueMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcIlluminanceMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcInductanceMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcIntegerCountRateMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcIonConcentrationMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcIsothermalMoistureCapacityMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcKinematicViscosityMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcLengthMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcLinearForceMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcLinearMomentMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcLinearStiffnessMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcLinearVelocityMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcLuminousFluxMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcLuminousIntensityMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcLuminousIntensityDistributionMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcMagneticFluxMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcMagneticFluxDensityMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcMassMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcMassDensityMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcMassFlowRateMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcMassPerLengthMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcModulusOfElasticityMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcModulusOfLinearSubgradeReactionMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcModulusOfRotationalSubgradeReactionMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcModulusOfSubgradeReactionMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcMoistureDiffusivityMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcMolecularWeightMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcMomentOfInertiaMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcNonNegativeLengthMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcPlanarForceMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcPlaneAngleMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcPositiveLengthMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcPositivePlaneAngleMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcPowerMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcPressureMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcRotationalFrequencyMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcRotationalMassMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcRotationalStiffnessMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcSectionalAreaIntegralMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcSectionModulusMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcShearModulusMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcSolidAngleMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcSoundPowerMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcSoundPowerLevelMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcSoundPressureMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcSoundPressureLevelMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcSpecificHeatCapacityMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcTemperatureGradientMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcTemperatureRateOfChangeMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcThermalAdmittanceMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcThermalConductivityMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcThermalExpansionCoefficientMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcThermalResistanceMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcThermalTransmittanceMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcTimeMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcTorqueMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcVaporPermeabilityMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcVolumeMeasure).ToUpperInvariant(), UnitKind.IfcUnitEnum },
                { nameof(IfcVolumetricFlowRateMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcWarpingConstantMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum },
                { nameof(IfcWarpingMomentMeasure).ToUpperInvariant(), UnitKind.IfcDerivedUnitEnum }
            };

            Units = new Dictionary<string, IfcUnitEnum> {
                { nameof(IfcAbsorbedDoseMeasure).ToUpperInvariant(), IfcUnitEnum.ABSORBEDDOSEUNIT },
                { nameof(IfcRadioActivityMeasure).ToUpperInvariant(), IfcUnitEnum.RADIOACTIVITYUNIT },
                { nameof(IfcAmountOfSubstanceMeasure).ToUpperInvariant(), IfcUnitEnum.AMOUNTOFSUBSTANCEUNIT },
                { nameof(IfcAreaMeasure).ToUpperInvariant(), IfcUnitEnum.AREAUNIT },
                { nameof(IfcElectricCapacitanceMeasure).ToUpperInvariant(), IfcUnitEnum.ELECTRICCAPACITANCEUNIT },
                { nameof(IfcThermodynamicTemperatureMeasure).ToUpperInvariant(), IfcUnitEnum.THERMODYNAMICTEMPERATUREUNIT },
                { nameof(IfcDoseEquivalentMeasure).ToUpperInvariant(), IfcUnitEnum.DOSEEQUIVALENTUNIT },
                { nameof(IfcElectricChargeMeasure).ToUpperInvariant(), IfcUnitEnum.ELECTRICCHARGEUNIT },
                { nameof(IfcElectricConductanceMeasure).ToUpperInvariant(), IfcUnitEnum.ELECTRICCONDUCTANCEUNIT },
                { nameof(IfcElectricCurrentMeasure).ToUpperInvariant(), IfcUnitEnum.ELECTRICCURRENTUNIT },
                { nameof(IfcElectricVoltageMeasure).ToUpperInvariant(), IfcUnitEnum.ELECTRICVOLTAGEUNIT },
                { nameof(IfcElectricResistanceMeasure).ToUpperInvariant(), IfcUnitEnum.ELECTRICRESISTANCEUNIT },
                { nameof(IfcEnergyMeasure).ToUpperInvariant(), IfcUnitEnum.ENERGYUNIT },
                { nameof(IfcForceMeasure).ToUpperInvariant(), IfcUnitEnum.FORCEUNIT },
                { nameof(IfcFrequencyMeasure).ToUpperInvariant(), IfcUnitEnum.FREQUENCYUNIT },
                { nameof(IfcIlluminanceMeasure).ToUpperInvariant(), IfcUnitEnum.ILLUMINANCEUNIT },
                { nameof(IfcInductanceMeasure).ToUpperInvariant(), IfcUnitEnum.INDUCTANCEUNIT },
                { nameof(IfcLengthMeasure).ToUpperInvariant(), IfcUnitEnum.LENGTHUNIT },
                { nameof(IfcLuminousFluxMeasure).ToUpperInvariant(), IfcUnitEnum.LUMINOUSFLUXUNIT },
                { nameof(IfcLuminousIntensityMeasure).ToUpperInvariant(), IfcUnitEnum.LUMINOUSINTENSITYUNIT },
                { nameof(IfcMagneticFluxMeasure).ToUpperInvariant(), IfcUnitEnum.MAGNETICFLUXUNIT },
                { nameof(IfcMagneticFluxDensityMeasure).ToUpperInvariant(), IfcUnitEnum.MAGNETICFLUXDENSITYUNIT },
                { nameof(IfcMassMeasure).ToUpperInvariant(), IfcUnitEnum.MASSUNIT },
                { nameof(IfcNonNegativeLengthMeasure).ToUpperInvariant(), IfcUnitEnum.LENGTHUNIT },
                { nameof(IfcPlaneAngleMeasure).ToUpperInvariant(), IfcUnitEnum.PLANEANGLEUNIT },
                { nameof(IfcPositiveLengthMeasure).ToUpperInvariant(), IfcUnitEnum.LENGTHUNIT },
                { nameof(IfcPositivePlaneAngleMeasure).ToUpperInvariant(), IfcUnitEnum.PLANEANGLEUNIT },
                { nameof(IfcPowerMeasure).ToUpperInvariant(), IfcUnitEnum.POWERUNIT },
                { nameof(IfcPressureMeasure).ToUpperInvariant(), IfcUnitEnum.PRESSUREUNIT },
                { nameof(IfcSolidAngleMeasure).ToUpperInvariant(), IfcUnitEnum.SOLIDANGLEUNIT },
                { nameof(IfcTimeMeasure).ToUpperInvariant(), IfcUnitEnum.TIMEUNIT },
                { nameof(IfcVolumeMeasure).ToUpperInvariant(), IfcUnitEnum.VOLUMEUNIT }
            };

            DerivedUnits = new Dictionary<string, IfcDerivedUnitEnum> {
                { nameof(IfcAccelerationMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.ACCELERATIONUNIT },
                { nameof(IfcPHMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.PHUNIT },
                { nameof(IfcAngularVelocityMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.ANGULARVELOCITYUNIT },
                { nameof(IfcAreaDensityMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.AREADENSITYUNIT },
                { nameof(IfcCompoundPlaneAngleMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.COMPOUNDPLANEANGLEUNIT },
                { nameof(IfcCurvatureMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.CURVATUREUNIT },
                { nameof(IfcDynamicViscosityMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.DYNAMICVISCOSITYUNIT },
                { nameof(IfcHeatFluxDensityMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.HEATFLUXDENSITYUNIT },
                { nameof(IfcHeatingValueMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.HEATINGVALUEUNIT },
                { nameof(IfcIntegerCountRateMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.INTEGERCOUNTRATEUNIT },
                { nameof(IfcIonConcentrationMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.IONCONCENTRATIONUNIT },
                { nameof(IfcIsothermalMoistureCapacityMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.ISOTHERMALMOISTURECAPACITYUNIT },
                { nameof(IfcKinematicViscosityMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.KINEMATICVISCOSITYUNIT },
                { nameof(IfcLinearForceMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.LINEARFORCEUNIT },
                { nameof(IfcLinearMomentMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.LINEARMOMENTUNIT },
                { nameof(IfcLinearStiffnessMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.LINEARSTIFFNESSUNIT },
                { nameof(IfcLinearVelocityMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.LINEARVELOCITYUNIT },
                { nameof(IfcLuminousIntensityDistributionMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.LUMINOUSINTENSITYDISTRIBUTIONUNIT },
                { nameof(IfcMassDensityMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.MASSDENSITYUNIT },
                { nameof(IfcMassFlowRateMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.MASSFLOWRATEUNIT },
                { nameof(IfcMassPerLengthMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.MASSPERLENGTHUNIT },
                { nameof(IfcModulusOfElasticityMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.MODULUSOFELASTICITYUNIT },
                { nameof(IfcModulusOfLinearSubgradeReactionMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.MODULUSOFLINEARSUBGRADEREACTIONUNIT },
                { nameof(IfcModulusOfRotationalSubgradeReactionMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.MODULUSOFROTATIONALSUBGRADEREACTIONUNIT },
                { nameof(IfcModulusOfSubgradeReactionMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.MODULUSOFSUBGRADEREACTIONUNIT },
                { nameof(IfcMoistureDiffusivityMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.MOISTUREDIFFUSIVITYUNIT },
                { nameof(IfcMolecularWeightMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.MOLECULARWEIGHTUNIT },
                { nameof(IfcMomentOfInertiaMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.MOMENTOFINERTIAUNIT },
                { nameof(IfcPlanarForceMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.PLANARFORCEUNIT },
                { nameof(IfcRotationalFrequencyMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.ROTATIONALFREQUENCYUNIT },
                { nameof(IfcRotationalMassMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.ROTATIONALMASSUNIT },
                { nameof(IfcRotationalStiffnessMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.ROTATIONALSTIFFNESSUNIT },
                { nameof(IfcSectionalAreaIntegralMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.SECTIONAREAINTEGRALUNIT },
                { nameof(IfcSectionModulusMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.SECTIONMODULUSUNIT },
                { nameof(IfcShearModulusMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.SHEARMODULUSUNIT },
                { nameof(IfcSoundPowerMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.SOUNDPOWERUNIT },
                { nameof(IfcSoundPowerLevelMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.SOUNDPOWERLEVELUNIT },
                { nameof(IfcSoundPressureMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.SOUNDPRESSUREUNIT },
                { nameof(IfcSoundPressureLevelMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.SOUNDPRESSURELEVELUNIT },
                { nameof(IfcSpecificHeatCapacityMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.SPECIFICHEATCAPACITYUNIT },
                { nameof(IfcTemperatureGradientMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.TEMPERATUREGRADIENTUNIT },
                { nameof(IfcTemperatureRateOfChangeMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.TEMPERATURERATEOFCHANGEUNIT },
                { nameof(IfcThermalAdmittanceMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.THERMALADMITTANCEUNIT },
                { nameof(IfcThermalConductivityMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.THERMALCONDUCTANCEUNIT },
                { nameof(IfcThermalExpansionCoefficientMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.THERMALEXPANSIONCOEFFICIENTUNIT },
                { nameof(IfcThermalResistanceMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.THERMALRESISTANCEUNIT },
                { nameof(IfcThermalTransmittanceMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.THERMALTRANSMITTANCEUNIT },
                { nameof(IfcTorqueMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.TORQUEUNIT },
                { nameof(IfcVaporPermeabilityMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.VAPORPERMEABILITYUNIT },
                { nameof(IfcVolumetricFlowRateMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.VOLUMETRICFLOWRATEUNIT },
                { nameof(IfcWarpingConstantMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.WARPINGCONSTANTUNIT },
                { nameof(IfcWarpingMomentMeasure).ToUpperInvariant(), IfcDerivedUnitEnum.WARPINGMOMENTUNIT }
            };
        }
    }

    public enum UnitKind
    {
        IfcUnitEnum,
        IfcDerivedUnitEnum
    }
}
